name: CI/CD for Frontend

on:
  push:
    branches:
      - main  # main 브랜치에 Push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies & Build
        run: |
          npm ci
          npm run build
        env:
          CI: true

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > "$HOME/.ssh/id_rsa"
          chmod 600 "$HOME/.ssh/id_rsa"
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> "$HOME/.ssh/known_hosts"

      - name: Deploy Build Files to EC2
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no" ./build/ ontheit@${{ secrets.EC2_HOST }}:/home/ontheit/frontend-build/

      - name: Set up and Restart Nginx on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ontheit@${{ secrets.EC2_HOST }} << 'EOF'
          
          # 1. Nginx 설치 및 설정
          sudo yum update -y
          sudo yum install -y nginx
          sudo systemctl start nginx
          sudo systemctl enable nginx

          # 2. 기존 프론트엔드 파일 삭제 후 새 빌드 배포
          sudo rm -rf /var/www/html/*
          sudo mkdir -p /var/www/html
          sudo cp -r /home/ontheit/frontend-build/* /var/www/html/
          sudo chown -R ontheit:ontheit /var/www/html

          # 3. Nginx 설정 적용
          sudo tee /etc/nginx/conf.d/frontend.conf > /dev/null <<EOT
          server {
              listen 80;
              server_name _;
              root /var/www/html;
              index index.html;
              
              location / {
                  try_files \$uri /index.html;
              }
          }
          EOT
          
          # 4. Nginx 재시작
          sudo systemctl restart nginx
          EOF
